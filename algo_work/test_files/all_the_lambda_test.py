import unittest
from algo_work.program_files import all_the_lambda


class MyTestCase(unittest.TestCase):
    def test_Lambda(self):
        self.assertEqual(all_the_lambda.Lambda(2, 1), 0.5)
        self.assertEqual(all_the_lambda.Lambda(10, 1), 0.1)
        self.assertEqual(all_the_lambda.Lambda(7, 6), 0.8571428571428571)


    def test_assign_Lambda(self):
        parties = [('A', 2), ('B', 5), ('C', 3), ('D', 4), ('E', 3), ('F', 8)]

        conductances = [([('C', 3), ('D', 4), ('E', 3), ('F', 8)], 0.5116279069767442),
                                        ([('B', 5), ('D', 4), ('E', 3), ('F', 8)], 0.24271844660194175),
                                        ([('B', 5), ('C', 3), ('E', 3), ('F', 8)], 0.29896907216494845),
                                        ([('B', 5), ('C', 3), ('D', 4), ('F', 8)], 0.3333333333333333),
                                        ([('A', 2), ('B', 5), ('E', 3), ('F', 8)], 0.32653061224489793),
                                        ([('A', 2), ('B', 5), ('D', 4), ('F', 8)], 0.3617021276595745),
                                        ([('A', 2), ('B', 5), ('C', 3), ('F', 8)], 0.4090909090909091)]

        ceps = [([('C', 3), ('D', 4), ('E', 3), ('F', 8)], 720.0),
                                ([('B', 5), ('D', 4), ('E', 3), ('F', 8)], 60480.0),
                                ([('B', 5), ('C', 3), ('E', 3), ('F', 8)], 15552.0),
                                ([('B', 5), ('C', 3), ('D', 4), ('F', 8)], 5670.0),
                                ([('A', 2), ('B', 5), ('E', 3), ('F', 8)], 8640.0),
                                ([('A', 2), ('B', 5), ('D', 4), ('F', 8)], 4725.0),
                                ([('A', 2), ('B', 5), ('C', 3), ('F', 8)], 1620.0)]

        self.assertEqual(all_the_lambda.assign_Lambda(parties, conductances, ceps), [(('A', 2), 26460.000000000004),
                                                                                     (('B', 5), 249177.6),
                                                                                     (('C', 3), 52018.75862068966),
                                                                                     (('D', 4), 249177.6),
                                                                                     (('E', 3), 249177.6),
                                                                                     (('F', 8), 249177.6)])


    def test_score_lambda_fun_times(self):
        scores = [('A', 0.16666666666), ('B', 0.16666666666), ('C', 0.16666666666), ('D', 0.16666666666),
                  ('E', 0.16666666666), ('F', 0.16666666666), ]

        parties = [('A', 2), ('B', 5), ('C', 3), ('D', 4), ('E', 3), ('F', 8)]

        conductances = [([('C', 3), ('D', 4), ('E', 3), ('F', 8)], 0.5116279069767442),
                        ([('B', 5), ('D', 4), ('E', 3), ('F', 8)], 0.24271844660194175),
                        ([('B', 5), ('C', 3), ('E', 3), ('F', 8)], 0.29896907216494845),
                        ([('B', 5), ('C', 3), ('D', 4), ('F', 8)], 0.3333333333333333),
                        ([('A', 2), ('B', 5), ('E', 3), ('F', 8)], 0.32653061224489793),
                        ([('A', 2), ('B', 5), ('D', 4), ('F', 8)], 0.3617021276595745),
                        ([('A', 2), ('B', 5), ('C', 3), ('F', 8)], 0.4090909090909091)]

        ceps = [([('C', 3), ('D', 4), ('E', 3), ('F', 8)], 720.0),
                ([('B', 5), ('D', 4), ('E', 3), ('F', 8)], 60480.0),
                ([('B', 5), ('C', 3), ('E', 3), ('F', 8)], 15552.0),
                ([('B', 5), ('C', 3), ('D', 4), ('F', 8)], 5670.0),
                ([('A', 2), ('B', 5), ('E', 3), ('F', 8)], 8640.0),
                ([('A', 2), ('B', 5), ('D', 4), ('F', 8)], 4725.0),
                ([('A', 2), ('B', 5), ('C', 3), ('F', 8)], 1620.0)]

        lambdas = all_the_lambda.assign_Lambda(parties, conductances, ceps)

        self.assertEqual(all_the_lambda.score_lambda_fun_times(scores, lambdas), [('A', 4409.999999823601),
                                                                                  ('B', 41529.59999833882),
                                                                                  ('C', 8669.793103101485),
                                                                                  ('D', 41529.59999833882),
                                                                                  ('E', 41529.59999833882),
                                                                                  ('F', 41529.59999833882)])

    def test_normalise(self):
        scores = [('A', 4409.999999823601), ('B', 41529.59999833882), ('C', 8669.793103101485),
                  ('D', 41529.59999833882), ('E', 41529.59999833882), ('F', 41529.59999833882)]

        self.assertEqual(all_the_lambda.normalise(scores), [('A', 0.024609623141982114),
                                                            ('B', 0.23175233678849438),
                                                            ('C', 0.048381029704040276),
                                                            ('D', 0.23175233678849438),
                                                            ('E', 0.23175233678849438),
                                                            ('F', 0.23175233678849438)]
)

if __name__ == '__main__':
    unittest.main()
